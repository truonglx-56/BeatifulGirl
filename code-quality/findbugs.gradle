def sourceSetMain = android.sourceSets.main.java.srcDirs
def rulesDir = new File("$project.rootDir/code-quality", 'rules')
def ignoreFail = true // sad panda

def includeSrcPatternApplication = 'com/novoda/downloadmanager/**/*.java'
def excludeSrcPatternRClass = 'com/novoda/downloadmanager/**/R.java'
def excludeSrcPatternGeneratedFiles = '**/gen/**'

apply plugin: 'findbugs'
task findbugsMain(type: FindBugs) {
    description 'Uses static analysis to look for bugs in Java code.'
    ignoreFailures ignoreFail
    excludeFilter = file("$rulesDir/findbugs/exclude.xml")
    classes = files("$project.buildDir/intermediates/classes/")

    source sourceSetMain
    include includeSrcPatternApplication
    exclude excludeSrcPatternRClass
    exclude excludeSrcPatternGeneratedFiles

    classpath = files()

    reports {
        html.enabled = project.hasProperty('findbugs.html')
        xml.enabled = !html.enabled // only one output format can be enabled
    }
}
staticAnalysis.dependsOn findbugsMain
android.libraryVariants.all { variant ->
    findbugsMain.dependsOn variant.javaCompile
    findbugsMain.mustRunAfter variant.javaCompile
}
